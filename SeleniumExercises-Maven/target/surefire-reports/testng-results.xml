<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="30" total="40" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-12T23:30:32 CEST" name="Login Test Suite" finished-at="2023-04-12T23:30:37 CEST" duration-ms="5817">
    <groups>
    </groups>
    <test started-at="2023-04-12T23:30:32 CEST" name="LoginTest Error" finished-at="2023-04-12T23:30:33 CEST" duration-ms="1629">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:32 CEST" name="beforeMethod" finished-at="2023-04-12T23:30:32 CEST" duration-ms="102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithUsernameAndPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:32 CEST" name="loginWithUsernameAndPassword" data-provider="LoginTest Error" finished-at="2023-04-12T23:30:32 CEST" duration-ms="304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalidPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:32 CEST" name="teardown" finished-at="2023-04-12T23:30:32 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:32 CEST" name="beforeMethod" finished-at="2023-04-12T23:30:32 CEST" duration-ms="44" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithUsernameAndPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:32 CEST" name="loginWithUsernameAndPassword" data-provider="LoginTest Error" finished-at="2023-04-12T23:30:32 CEST" duration-ms="214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalidUser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[superduper]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:32 CEST" name="teardown" finished-at="2023-04-12T23:30:32 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:32 CEST" name="beforeMethod" finished-at="2023-04-12T23:30:32 CEST" duration-ms="32" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithUsernameAndPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:32 CEST" name="loginWithUsernameAndPassword" data-provider="LoginTest Error" finished-at="2023-04-12T23:30:32 CEST" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Superduper]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:32 CEST" name="beforeMethod" finished-at="2023-04-12T23:30:33 CEST" duration-ms="46" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithUsernameAndPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:32 CEST" name="teardown" finished-at="2023-04-12T23:30:32 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:33 CEST" name="loginWithUsernameAndPassword" data-provider="LoginTest Error" finished-at="2023-04-12T23:30:33 CEST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:33 CEST" name="teardown" finished-at="2023-04-12T23:30:33 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:33 CEST" name="beforeMethod" finished-at="2023-04-12T23:30:33 CEST" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithUsernameAndPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:33 CEST" name="loginWithUsernameAndPassword" data-provider="LoginTest Error" finished-at="2023-04-12T23:30:33 CEST" duration-ms="241" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[superduper]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Welcome message is displayed for incorrect login data expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Welcome message is displayed for incorrect login data expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertFalse(Assert.java:78)
at TestCases.TestCollection.loginWithUsernameAndPassword(TestCollection.java:79)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.TestCollection@7b9a4292]" started-at="2023-04-12T23:30:33 CEST" name="teardown" finished-at="2023-04-12T23:30:33 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- LoginTest Error -->
    <test started-at="2023-04-12T23:30:33 CEST" name="LoginTest Success" finished-at="2023-04-12T23:30:34 CEST" duration-ms="410">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@2f9f7dcf]" started-at="2023-04-12T23:30:33 CEST" name="beforeMethod" finished-at="2023-04-12T23:30:33 CEST" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithCorrectUsernameAndPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithCorrectUsernameAndPassword()[pri:0, instance:TestCases.TestCollection@2f9f7dcf]" started-at="2023-04-12T23:30:33 CEST" name="loginWithCorrectUsernameAndPassword" finished-at="2023-04-12T23:30:34 CEST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithCorrectUsernameAndPassword -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.TestCollection@2f9f7dcf]" started-at="2023-04-12T23:30:34 CEST" name="teardown" finished-at="2023-04-12T23:30:34 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- LoginTest Success -->
    <test started-at="2023-04-12T23:30:34 CEST" name="CreateConnectionTest Success" finished-at="2023-04-12T23:30:35 CEST" duration-ms="1056">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@1bd4fdd]" started-at="2023-04-12T23:30:34 CEST" name="beforeMethod" finished-at="2023-04-12T23:30:34 CEST" duration-ms="76" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.createNewConnection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createNewConnection()[pri:0, instance:TestCases.TestCollection@1bd4fdd]" started-at="2023-04-12T23:30:34 CEST" name="createNewConnection" finished-at="2023-04-12T23:30:35 CEST" duration-ms="977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewConnection -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.TestCollection@1bd4fdd]" started-at="2023-04-12T23:30:35 CEST" name="teardown" finished-at="2023-04-12T23:30:35 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- CreateConnectionTest Success -->
    <test started-at="2023-04-12T23:30:35 CEST" name="Create connection and validate stats" finished-at="2023-04-12T23:30:36 CEST" duration-ms="1132">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@7d8995e]" started-at="2023-04-12T23:30:35 CEST" name="beforeMethod" finished-at="2023-04-12T23:30:35 CEST" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.createNewConnectionAndValidateStats()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createNewConnectionAndValidateStats()[pri:0, instance:TestCases.TestCollection@7d8995e]" started-at="2023-04-12T23:30:35 CEST" name="createNewConnectionAndValidateStats" finished-at="2023-04-12T23:30:36 CEST" duration-ms="1078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewConnectionAndValidateStats -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.TestCollection@7d8995e]" started-at="2023-04-12T23:30:36 CEST" name="teardown" finished-at="2023-04-12T23:30:36 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- Create connection and validate stats -->
    <test started-at="2023-04-12T23:30:36 CEST" name="Reset and repopulate using javascript" finished-at="2023-04-12T23:30:36 CEST" duration-ms="389">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@6aeb35e6]" started-at="2023-04-12T23:30:36 CEST" name="beforeMethod" finished-at="2023-04-12T23:30:36 CEST" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.javaScriptTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="javaScriptTest()[pri:0, instance:TestCases.TestCollection@6aeb35e6]" started-at="2023-04-12T23:30:36 CEST" name="javaScriptTest" finished-at="2023-04-12T23:30:36 CEST" duration-ms="357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- javaScriptTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.TestCollection@6aeb35e6]" started-at="2023-04-12T23:30:36 CEST" name="teardown" finished-at="2023-04-12T23:30:36 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- Reset and repopulate using javascript -->
    <test started-at="2023-04-12T23:30:36 CEST" name="Add new connection and wait for validation" finished-at="2023-04-12T23:30:37 CEST" duration-ms="1126">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.TestCollection@3c19aaa5]" started-at="2023-04-12T23:30:27 CEST" name="setup" finished-at="2023-04-12T23:30:32 CEST" duration-ms="4686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@3c19aaa5]" started-at="2023-04-12T23:30:36 CEST" name="beforeMethod" finished-at="2023-04-12T23:30:36 CEST" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.expectedConditionTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="expectedConditionTest()[pri:0, instance:TestCases.TestCollection@3c19aaa5]" started-at="2023-04-12T23:30:36 CEST" name="expectedConditionTest" finished-at="2023-04-12T23:30:37 CEST" duration-ms="1088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expectedConditionTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.TestCollection@3c19aaa5]" started-at="2023-04-12T23:30:37 CEST" name="teardown" finished-at="2023-04-12T23:30:37 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="finalization()[pri:0, instance:TestCases.TestCollection@3c19aaa5]" started-at="2023-04-12T23:30:37 CEST" name="finalization" finished-at="2023-04-12T23:30:38 CEST" duration-ms="546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finalization -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- Add new connection and wait for validation -->
  </suite> <!-- Login Test Suite -->
</testng-results>
