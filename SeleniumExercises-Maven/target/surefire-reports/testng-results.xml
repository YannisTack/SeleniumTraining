<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="30" total="40" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-29T18:30:15 CEST" name="Login Test Suite" finished-at="2023-03-29T18:30:21 CEST" duration-ms="5879">
    <groups>
    </groups>
    <test started-at="2023-03-29T18:30:15 CEST" name="LoginTest Error" finished-at="2023-03-29T18:30:16 CEST" duration-ms="1510">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@4fb61f4a]" started-at="2023-03-29T18:30:15 CEST" name="beforeMethod" finished-at="2023-03-29T18:30:15 CEST" duration-ms="108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithUsernameAndPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:TestCases.TestCollection@4fb61f4a]" started-at="2023-03-29T18:30:15 CEST" name="loginWithUsernameAndPassword" data-provider="LoginTest Error" finished-at="2023-03-29T18:30:15 CEST" duration-ms="320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalidPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@4fb61f4a]" started-at="2023-03-29T18:30:15 CEST" name="beforeMethod" finished-at="2023-03-29T18:30:15 CEST" duration-ms="46" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithUsernameAndPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:TestCases.TestCollection@4fb61f4a]" started-at="2023-03-29T18:30:15 CEST" name="loginWithUsernameAndPassword" data-provider="LoginTest Error" finished-at="2023-03-29T18:30:15 CEST" duration-ms="201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalidUser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[superduper]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@4fb61f4a]" started-at="2023-03-29T18:30:15 CEST" name="beforeMethod" finished-at="2023-03-29T18:30:16 CEST" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithUsernameAndPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:TestCases.TestCollection@4fb61f4a]" started-at="2023-03-29T18:30:16 CEST" name="loginWithUsernameAndPassword" data-provider="LoginTest Error" finished-at="2023-03-29T18:30:16 CEST" duration-ms="190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Superduper]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@4fb61f4a]" started-at="2023-03-29T18:30:16 CEST" name="beforeMethod" finished-at="2023-03-29T18:30:16 CEST" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithUsernameAndPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:TestCases.TestCollection@4fb61f4a]" started-at="2023-03-29T18:30:16 CEST" name="loginWithUsernameAndPassword" data-provider="LoginTest Error" finished-at="2023-03-29T18:30:16 CEST" duration-ms="206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@4fb61f4a]" started-at="2023-03-29T18:30:16 CEST" name="beforeMethod" finished-at="2023-03-29T18:30:16 CEST" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithUsernameAndPassword(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithUsernameAndPassword(java.lang.String,java.lang.String)[pri:0, instance:TestCases.TestCollection@4fb61f4a]" started-at="2023-03-29T18:30:16 CEST" name="loginWithUsernameAndPassword" data-provider="LoginTest Error" finished-at="2023-03-29T18:30:16 CEST" duration-ms="290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[superduper]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUsernameAndPassword -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- LoginTest Error -->
    <test started-at="2023-03-29T18:30:16 CEST" name="LoginTest Success" finished-at="2023-03-29T18:30:17 CEST" duration-ms="444">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@1a482e36]" started-at="2023-03-29T18:30:16 CEST" name="beforeMethod" finished-at="2023-03-29T18:30:16 CEST" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.loginWithCorrectUsernameAndPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginWithCorrectUsernameAndPassword()[pri:0, instance:TestCases.TestCollection@1a482e36]" started-at="2023-03-29T18:30:16 CEST" name="loginWithCorrectUsernameAndPassword" finished-at="2023-03-29T18:30:17 CEST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithCorrectUsernameAndPassword -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- LoginTest Success -->
    <test started-at="2023-03-29T18:30:17 CEST" name="CreateConnectionTest Success" finished-at="2023-03-29T18:30:18 CEST" duration-ms="1082">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@2f9f7dcf]" started-at="2023-03-29T18:30:17 CEST" name="beforeMethod" finished-at="2023-03-29T18:30:17 CEST" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.createNewConnection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createNewConnection()[pri:0, instance:TestCases.TestCollection@2f9f7dcf]" started-at="2023-03-29T18:30:17 CEST" name="createNewConnection" finished-at="2023-03-29T18:30:18 CEST" duration-ms="1021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewConnection -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- CreateConnectionTest Success -->
    <test started-at="2023-03-29T18:30:18 CEST" name="Create connection and validate stats" finished-at="2023-03-29T18:30:19 CEST" duration-ms="1238">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@55183b20]" started-at="2023-03-29T18:30:18 CEST" name="beforeMethod" finished-at="2023-03-29T18:30:18 CEST" duration-ms="67" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.createNewConnectionAndValidateStats()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createNewConnectionAndValidateStats()[pri:0, instance:TestCases.TestCollection@55183b20]" started-at="2023-03-29T18:30:18 CEST" name="createNewConnectionAndValidateStats" finished-at="2023-03-29T18:30:19 CEST" duration-ms="1171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewConnectionAndValidateStats -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- Create connection and validate stats -->
    <test started-at="2023-03-29T18:30:19 CEST" name="Reset and repopulate using javascript" finished-at="2023-03-29T18:30:19 CEST" duration-ms="397">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@130d63be]" started-at="2023-03-29T18:30:19 CEST" name="beforeMethod" finished-at="2023-03-29T18:30:19 CEST" duration-ms="38" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.javaScriptTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="javaScriptTest()[pri:0, instance:TestCases.TestCollection@130d63be]" started-at="2023-03-29T18:30:19 CEST" name="javaScriptTest" finished-at="2023-03-29T18:30:19 CEST" duration-ms="358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- javaScriptTest -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- Reset and repopulate using javascript -->
    <test started-at="2023-03-29T18:30:20 CEST" name="Add new connection and wait for validation" finished-at="2023-03-29T18:30:21 CEST" duration-ms="1134">
      <class name="TestCases.TestCollection">
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.TestCollection@1283bb96]" started-at="2023-03-29T18:30:09 CEST" name="setup" finished-at="2023-03-29T18:30:15 CEST" duration-ms="5990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:TestCases.TestCollection@1283bb96]" started-at="2023-03-29T18:30:20 CEST" name="beforeMethod" finished-at="2023-03-29T18:30:20 CEST" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.TestCollection.expectedConditionTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="expectedConditionTest()[pri:0, instance:TestCases.TestCollection@1283bb96]" started-at="2023-03-29T18:30:20 CEST" name="expectedConditionTest" finished-at="2023-03-29T18:30:21 CEST" duration-ms="1098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expectedConditionTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.TestCollection@1283bb96]" started-at="2023-03-29T18:30:21 CEST" name="teardown" finished-at="2023-03-29T18:30:21 CEST" duration-ms="611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- TestCases.TestCollection -->
    </test> <!-- Add new connection and wait for validation -->
  </suite> <!-- Login Test Suite -->
</testng-results>
